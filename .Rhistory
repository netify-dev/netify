longitudinal = TRUE) +
facet_wrap(~actor)
# top 5 GDP countries (USA, China, Japan, Germany, India)
country_codes <- c("2", "710", "740", "255", "365")
# zoom in on specific parts of the network for actor viz
mid_subset <- summary_actor_mids %>%
filter(actor %in% top_5)
plot_actorStats(mid_subset,
net_stat = "degree",
longitudinal = TRUE) +
facet_wrap(~actor)
# top 5 GDP countries (USA, China, Japan, Germany, India)
country_codes <- c("2", "710", "740", "255", "750")
# zoom in on specific parts of the network for actor viz
mid_subset <- summary_actor_mids %>%
filter(actor %in% top_5)
plot_actorStats(mid_subset,
net_stat = "degree",
longitudinal = TRUE) +
facet_wrap(~actor)
top_5 <- c("2", "710", "740", "255", "750")
# zoom in on specific parts of the network for actor viz
mid_subset <- summary_actor_mids %>%
filter(actor %in% top_5)
plot_actorStats(mid_subset,
net_stat = "degree",
longitudinal = TRUE) +
facet_wrap(~actor)
plot.netify(mid_long_network)
load(file="ucdp_ged_mexico.rda")
load(file="~Desktop/ucdp_ged_mexico.rda")
load(file="~/Users/dorffc/Desktop")
load(file="~/Users/dorffc/Desktop/ucdp_ged_mexico")
load(file="~/Users/dorffc/Desktop/ucdp_ged_mexico.rda")
load(file="~/Users/dorffc/Desktop/ucdp_ged_mexico.rda")
load(file="~/Desktop/ucdp_ged_mexico.rda")
mex_network <- netify(
dyad_data = mexico,
actor1 = 'side_a',
actor2 = 'side_b',
symmetric = TRUE,
sum_dyads = TRUE,
diag_to_NA = TRUE,
missing_to_zero = TRUE
)
# Display a summary of the network object
summary(mex_network)
# Display a summary of the network object
summary(mex_network)
plot(mex_network)
?plot
?plot_network
?plot_netify
netify.plot
?plot.netify
plot(mex_network,
add_text = TRUE)
mex_network
peek(mex_network)
mex_network_weight <- netify(
dyad_data = mexico,
actor1 = 'side_a',
actor2 = 'side_b',
weight = 'deaths_civilians',
symmetric = TRUE,
sum_dyads = TRUE,
diag_to_NA = TRUE,
missing_to_zero = TRUE
)
# weight using a variable
mex_network_civ <- netify(
dyad_data = mexico,
actor1 = 'side_a',
actor2 = 'side_b',
weight = 'deaths_civilians',
symmetric = TRUE,
sum_dyads = TRUE,
diag_to_NA = TRUE,
missing_to_zero = TRUE
)
summary(mex_network_civ)
plot(mex_network,
add_text = TRUE)
plot(mex_network_civ,
add_text = TRUE)
select_names <- c("EZLN", "Jalisco Cartel New Generation", "Los Caballeros Templarios", "Autodefensas Unidas de Michoacán", "Jalisco Cartel", "Los Zetas")
plot(mex_network,
add_text = TRUE)
plot(mex_network_civ,
add_text = TRUE)
plot(mex_network,
add_text = select_names)
plot(mex_network,
add_text = "select_names")
plot(mex_network,
select_text_display = "select_names")
plot(mex_network,
select_text = select_names)
head(mex_network)
unique(rownames(mex_network))
select_names <- c("EZLN", "Jalisco Cartel New Generation", "Los Caballeros Templarios", "Autodefensas Unidas de Michoacán", "Gulf Cartel", "Los Zetas", "Beltrán Leyva Cartel",
"Government of Mexico")
plot(mex_network,
add_text = TRUE)
plot(mex_network,
select_text = select_names)
plot(mex_network_civ,
add_text = TRUE)
select_names <- c("EZLN ", "Jalisco Cartel New Generation", "Juarez Cartel", "Autodefensas Unidas de Michoacán", "Gulf Cartel", "Los Zetas", "Beltrán Leyva Cartel",
"Government of Mexico")
plot(mex_network,
select_text = select_names)
select_names <- c("Autodefensas Unidas de Michoacán", "Beltrán Leyva Cartel",
"Sinaloa Cartel")
plot(mex_network,
select_text = select_names)
select_names <- c("Autodefensas Unidas de Michoacán",
"Gulf Cartel",
"Beltrán Leyva Cartel",
"Sinaloa Cartel")
plot(mex_network,
add_text = TRUE)
plot(mex_network,
select_text = select_names)
plot(mex_network_civ,
add_text = TRUE)
plot(mex_network,
select_text = select_names)
select_names <- c("Autodefensas Unidas de Michoacán",
"Gulf Cartel",
"Beltrán Leyva Cartel",
"Sinaloa Cartel")
plot(mex_network,
select_text = select_names)
select_names <- c("Autodefensas Unidas de Michoacán",
"Gulf Cartel",
"Beltrán Leyva Cartel",
"Los Zetas - Cártel del Noreste faction")
plot(mex_network,
select_text = select_names)
plot(mex_network,
select_text = select_names)
plot(mex_network,
select_text = select_names,
add_text = TRUE)
select_names <- c("EZLN", "Jalisco Cartel New Generation", "Los Caballeros Templarios", "Autodefensas Unidas de Michoacán", "Gulf Cartel", "Los Zetas", "Beltrán Leyva Cartel",
"Government of Mexico")
select_names
plot(mex_network,
select_text = select_names)
# add to summary
sum_mex <- summary_actor(mex_network,  closeness)
i_close = function(x){ ig = prep_for_igraph(x) ; closeness(ig) }
closeness = i_close(mex_network)
library(igraph)
i_close = function(x){ ig = prep_for_igraph(x) ; closeness(ig) }
closeness = i_close(mex_network)
# add to summary
sum_mex <- summary_actor(mex_network, closeness = closeness)
closeness = i_close(mex_network)
# add to summary
sum_mex <- summary_actor(mex_network, closeness = closeness)
sum_mex
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# load packages
library(netify)
# install extra packages for this vignette
#if('tidyverse' %in% rownames(installed.packages())){
#  install.packages('tidyverse', repos='https://cloud.r-project.org') }
#if('peacesciencer' %in% rownames(installed.packages())){
#  install.packages('peacesciencer', repos='https://cloud.r-project.org') }
# load necessary packages for this vignette
library(peacesciencer)
library(tidyverse)
# organize external data for peacesciencer
peacesciencer::download_extdata()
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
# Chunk 3
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
# Chunk 4
# create a vector of nodal data
node_data <- unique(cow_dyads[,c("ccode1", "year", "wbgdppc2011est2")])
node_data$wbgdppc2011est2_log <- log(node_data$wbgdppc2011est2)
# add nodal variable to netlet object
mid_long_network <- add_nodal(
netlet = mid_long_network,
node_data = node_data,
actor = "ccode1",
time = "year"
)
# Chunk 5
peek(mid_long_network, when_to_peek = c('2012'), what_to_peek = 30)
# Chunk 6
# create data.frame that provides network-level summary stats
# for each year of the network
mid_long_summary <- summary(mid_long_network)
# Chunk 7
plot_networkStats(mid_long_summary,
longitudinal = TRUE,
net_stat = "dens")
# Chunk 8
# every year & every actor (messy!)
summary_actor_mids <- summary_actor(mid_long_network)
# top 5 GDP countries (USA, China, Japan, Germany, India)
top_5 <- c("2", "710", "740", "255", "750")
# zoom in on specific parts of the network for actor viz
mid_subset <- summary_actor_mids %>%
filter(actor %in% top_5)
plot_actorStats(mid_subset,
net_stat = "degree",
longitudinal = TRUE) +
facet_wrap(~actor)
plot.netify(mid_long_network)
plot.netify(mid_long_network)
plot(
mid_long_network,
edge_color='grey',
node_size=2
)
# add actor variables
mid_long_network = add_nodal(
mid_long_network,
summary_actor(mid_long_network),
actor='actor', time='time',
node_vars = c('degree', 'prop_ties', 'eigen_vector'),
)
# vary node size by degree
plot(
mid_long_network,
edge_color='grey',
node_size_var='degree'
)
# vary node color by polyarchy
plot(
mid_long_network,
edge_color='grey',
node_size_var='degree',
node_color_var='v2x_polyarchy1'
) +
scale_color_gradient2()
mid_long_network = add_nodal(
mid_long_network,
summary_actor(mid_long_network),
actor='actor', time='time',
node_vars = c('degree', 'prop_ties', 'eigen_vector'),
)
# vary node size by degree
plot(
mid_long_network,
edge_color='grey',
node_size_var='degree'
)
mid_long_network
plot(
mid_long_network,
edge_color='grey',
node_size_var='degree'
)
plot(
mid_long_network,
edge_color='grey',
node_size_var='degree'
)
plot(
mid_long_network,
edge_color='grey',
node_size_var='degree',
node_color_var='v2x_polyarchy1'
) +
scale_color_gradient2()
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
#test()
#check()
# if error about corrupt file, s3 stuff, restart R
# usethis::use_git_config(user.name = "cassyld", user.email = "cassyld@gmail.com")
# devtools::install_github("netify-dev/netify")
# usethis::create_github_token()
# credentials::set_github_pat()
# remotes::install_github("netify-dev/netify")
# you accidentally installed intel version and not mac version of developer tools?
# make sure dependencies are installed (ggnewscale through me an error)
install_github("netify-dev/netify")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# load packages
library(netify)
# install extra packages for this vignette
#if('tidyverse' %in% rownames(installed.packages())){
#  install.packages('tidyverse', repos='https://cloud.r-project.org') }
#if('peacesciencer' %in% rownames(installed.packages())){
#  install.packages('peacesciencer', repos='https://cloud.r-project.org') }
# load necessary packages for this vignette
library(peacesciencer)
library(tidyverse)
# organize external data for peacesciencer
peacesciencer::download_extdata()
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
# Chunk 3
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
library(netify)
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(netify)
# install extra packages for this vignette
#if('tidyverse' %in% rownames(installed.packages())){
#  install.packages('tidyverse', repos='https://cloud.r-project.org') }
#if('peacesciencer' %in% rownames(installed.packages())){
#  install.packages('peacesciencer', repos='https://cloud.r-project.org') }
# load necessary packages for this vignette
library(peacesciencer)
library(tidyverse)
# organize external data for peacesciencer
peacesciencer::download_extdata()
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
remove.packages("netify")
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
install_github("netify-dev/netify")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# load packages
library(netify)
# install extra packages for this vignette
if('tidyverse' %in% rownames(installed.packages())){
if('peacesciencer' %in% rownames(installed.packages())){
install.packages('peacesciencer', repos='https://cloud.r-project.org') }
}
# load necessary packages for this vignette
library(peacesciencer)
library(tidyverse)
# organize external data for peacesciencer
peacesciencer::download_extdata()
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
# Chunk 3
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
install.packages("peacesciencer", repos = "https://cloud.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(netify)
# install extra packages for this vignette
#if('tidyverse' %in% rownames(installed.packages())){
#if('peacesciencer' %in% rownames(installed.packages())){
#  install.packages('peacesciencer', repos='https://cloud.r-project.org') }
#}
# load necessary packages for this vignette
library(peacesciencer)
library(tidyverse)
# organize external data for peacesciencer
peacesciencer::download_extdata()
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
