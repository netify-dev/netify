knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
conf_dyads_slice <- conf_dyads %>%
filter(year ==2015)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(peacesciencer)
library(tidyverse)
# create a dyadic data set
conf_dyads <- create_dyadyears(directed = TRUE,
subset_years = c(2010:2015)) %>%
# set data to politically relevant dyads
filter_prd() %>%
# add conflict GML-MID data
add_gml_mids(keep = NULL)
library(peacesciencer)
library(tidyverse)
# create a dyadic data set
conf_dyads <- create_dyadyears(directed = TRUE,
subset_years = c(2010:2015)) %>%
# set data to politically relevant dyads
filter_prd() %>%
# add conflict GML-MID data
add_gml_mids(keep = NULL)
conf_dyads_slice <- conf_dyads %>%
filter(year ==2015)
head(conf_dyads)
head(conf_dyads_slice)
event_mat_time <-
netify(
conf_dyads,
actor1="actor1",actor2= "actor2",
time = "year",
actor_time_uniform=TRUE,
weight=NULL, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=TRUE )
library(netify)
event_mat_time <-
netify(
conf_dyads,
actor1="actor1",actor2= "actor2",
time = "year",
actor_time_uniform=TRUE,
weight=NULL, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=TRUE )
event_mat_time <-
netify(
conf_dyads,
actor1="ccode1",actor2= "ccode2",
time = "year",
actor_time_uniform=TRUE,
weight=NULL, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=TRUE )
event_mat_time
#use the index location
peek(event_mat_time, when_to_peek = 18)
#use the index location
peek(event_mat_time, when_to_peek = 2)
event_data_time_actors <-
netify(
conf_dyads,
actor1="ccode1",actor2= "ccode2",
time = "year",
actor_time_uniform=FALSE,
weight=NULL, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=TRUE )
event_data_time_actors
head(lapply(event_data_time_actors, dim))
is.list(event_data_time_actors)
# cross sectional peek
peek(event_mat)
event_mat <- netify(
conf_dyads,
actor1='ccode1', actor2='ccode2',
weight='gmlmidongoing', sum_dyads=TRUE, symmetric=FALSE,
diag_to_NA=TRUE, missing_to_zero=TRUE)
event_mat
# cross sectional peek
peek(event_mat)
# changing actors peek
peek(event_data_time_actors, when_to_peek = 3)
# changing actors peek
peek(event_data_time_actors, when_to_peek = 1)
# changing actors peek
peek(event_data_time_actors, when_to_peek = 5)
# changing actors peek
peek(event_data_time_actors, when_to_peek = 5, nActors= 10)
?peek
# changing actors peek
peek(event_data_time_actors, when_to_peek = 5, what_rows_to_peek= 10)
# changing actors peek
peek(event_data_time_actors, when_to_peek = 5, what_to_peek = 10 )
sum_event_mat <- summary(event_mat)
sum_event_mat
transitivity = function(mat){
E <- mat-mean(mat,na.rm=TRUE)
D <- 1*(!is.na(E))
E[is.na(E)] <- 0
trans <- sum(diag(E%*%t(E)%*%E))/( sum(diag(D%*%t(D)%*%D))*sd(c(mat),na.rm=TRUE)^3)
return(trans)
}
cycles = function(mat){
E <- mat-mean(mat,na.rm=TRUE)
D <- 1*(!is.na(E))
E[is.na(E)] <- 0
cycles <- sum(diag(E%*%E%*%E))/( sum(diag(D%*%D%*%D))*sd(c(mat),na.rm=TRUE)^3)
return(cycles)
}
sum_event_mat <- summary(event_mat, cycles=cycles, transitivity=transitivity)
sum_event_mat
sum_event_mat
network_sum <- summary_actor(event_mat)
network_sum
?plot_networkStats
nets_time_sum <- summary(event_mat_time)
library(ggplot2)
plot_networkStats(nets_time_sum, longitudinal = TRUE, net_stat=c("sdSendEff", "sdRecEff")) +
labs(title = "Network-level Statistics") +
theme_bw() # you can overwrite the theme and other ggplot functions
nets_time_sum <- summary(event_mat_time)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat=c('average_degree_in','average_degree_out'),
actor_names=c('Government of Nigeria', 'Marwa Ethnic Militia (Nigeria)'), toplist_n=NULL)
unique(conf_dyads$ccode1)
head(conf_dyads)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat=c('average_degree_in','average_degree_out'),
actor_names=c('2', '20'), toplist_n=NULL)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat=c('average_degree_in','average_degree_out'),
actor_names=c('2', '20', '70'), toplist_n=NULL)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat=c('average_degree_in','average_degree_out'),
actor_names=c('90', '20', '70'), toplist_n=NULL)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat=c('average_degree_in','average_degree_out'),
actor_names=c('2', '710', '200'), toplist_n=NULL)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat=c('average_degree_in','average_degree_out'),
actor_names=c('2', '710', '200', '365'), toplist_n=NULL)
plot_actorStats(network_sum, longitudinal=FALSE, net_stat='average_degree_in', toplist_n=10)
igraph_obj <- prep_for_igraph(event_mat)
igraph_obj
igraph_obj <- prep_for_igraph(event_mat)
igraph_obj
plot(igraph_obj)
network_obj <- prep_for_network(event_mat)
network_obj
library(ggnet2
)
install.packages(ggnet2)
install.packages(ggnet)
install.packages("ggnet2")
install.packages("ggnet")
library(ggraph)
install.packages("ggraph")
net <- simplify(event_mat, remove.multiple = F, remove.loops = T)
net <- simplify(igraph_obj, remove.multiple = F, remove.loops = T)
plot(igraph_obj, edge.arrow.size=.4,vertex.label=NA)
plot(igraph_obj, edge.arrow.size=.4)
event_mat
peek(event_mat)
peek(event_mat,50)
rowsums(event_mat)
rowSums(event_mat)
rowSums(event_mat, rm.na=TRUE)
?rowSUms
?rowSums
rowSums (x, na.rm = TRUE, dims = 1)
rowSums (event_mat, na.rm = TRUE, dims = 1)
graph_attr(igraph_obj, "layout") <- layout_with_lgl
library(igraph)
graph_attr(igraph_obj, "layout") <- layout_with_lgl
plot(igraph_obj)
graph_attr(igraph_obj, "layout") <- layout_with_lgl
plot(igraph_obj)
plot(igraph_obj, edge.arrow.size=.4,vertex.label=NA)
rm_iso = which(degree(igraph_obj)==0)
igraph_obj = delete.vertices(igraph_obj, rm_oso)
igraph_obj = delete.vertices(igraph_obj, rm_iso)
plot(igraph_obj, edge.arrow.size=.4,vertex.label=NA)
graph_attr(igraph_obj, "layout") <- layout_with_lgl
plot(igraph_obj, edge.arrow.size=.4,vertex.label=NA)
plot(igraph_obj, edge.arrow.size=.4)
# install devtools
if (!require(devtools)) {
install.packages("devtools")
}
library(devtools)
install_github("netify-dev/netify")
library(devtools)
install_github("netify-dev/netify")
install_github("netify-dev/netify")
install_github("netify-dev/netify")
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
install_github("netify-dev/netify")
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
library(devtools)
install_github("netify-dev/netify")
library(netify)
library(devtools)
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
#document()
install()
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
#test()
#check()
# if error about corrupt file, s3 stuff, restart R
# usethis::use_git_config(user.name = "cassyld", user.email = "cassyld@gmail.com")
# devtools::install_github("netify-dev/netify")
# usethis::create_github_token()
# credentials::set_github_pat()
# remotes::install_github("netify-dev/netify")
# you accidentally installed intel version and not mac version of developer tools?
# make sure dependencies are installed (ggnewscale through me an error)
install_github("netify-dev/netify")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# load packages
library(netify)
# install extra packages for this vignette
if('tidyverse' %in% rownames(installed.packages())){
install.packages('tidyverse', repos='https://cloud.r-project.org') }
if('peacesciencer' %in% rownames(installed.packages())){
install.packages('peacesciencer', repos='https://cloud.r-project.org') }
