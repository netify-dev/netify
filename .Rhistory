library(netify)
?prep_for_amen
# load packages
library(netify)
library(peacesciencer)
library(tidyverse)
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
# create a vector of nodal data
node_data <- unique(cow_dyads[,c("ccode1", "year", "wbgdppc2011est2")])
# add nodal variable to netlet object
mid_long_network <- add_nodal(
netlet = mid_long_network,
node_data = node_data,
actor = "ccode1",
time = "year"
)
# convert to amen structure for modeling
amen_mids_model_prep <- prep_for_amen(mid_long_network)
dim(for_amen_longit$Y)
# convert to amen structure for modeling
amen_mids_prep <- prep_for_amen(mid_long_network)
dim(amen_mids_prep$Y)
# f array of dyadic attributes
dim(amen_mids_prep$Xdyad)
# array of nodal attributes for rows
dim(amen_mids_prep$Xrow)
# convert to amen structure for modeling
mids_longit_prep <- prep_for_amen(mid_long_network)
library(amen)
# core amen modeling function
amen(mids_longit_prep)
# core amen modeling function
ame(mids_longit_prep)
?ame
mids_longit_prep
# core amen modeling function
ame(mids_longit_prep$Y, mids_longit_prep$Y)
head(mids_longit_prep$Y)
range(mids_longit_prep$Y)
min(mids_longit_prep$Y)
range(cow_dyads$cowmidonset)
# core amen modeling function
ame(mids_longit_prep$Y, mids_longit_prep$Y, model=bin)
# core amen modeling function
ame(mids_longit_prep$Y, mids_longit_prep$Y, model="bin")
uninstall.package("amen")
remove.packages("amen")
install_github("s7minhas/amen")
library(devtools)
install_github("s7minhas/amen")
library(amen)
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
library(netify)
# top 5 GDP countries
top_5 <-c("2", "710", "740", "750", "200")
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = top_5,
when_to_subset = c('2010', '2011', '2012', '2013', '2014'))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# load packages
library(netify)
library(peacesciencer)
library(tidyverse)
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
# Chunk 3
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
# Chunk 4
# create a vector of nodal data
node_data <- unique(cow_dyads[,c("ccode1", "year", "wbgdppc2011est2")])
# add nodal variable to netlet object
mid_long_network <- add_nodal(
netlet = mid_long_network,
node_data = node_data,
actor = "ccode1",
time = "year"
)
# Chunk 5
peek(mid_long_network, when_to_peek = c('2012'), what_to_peek = 30)
# Chunk 6
# create data.frame that provides network-level summary stats
# for each year of the network
summary(mid_long_network)
# Chunk 7
# every year & every actor (messy!)
summary_actor_mids <- summary_actor(mid_long_network)
# cannot pass this data frame to plot_actorStats?
# code below not interesting for symmetric?
head(summary_actor_mids)
# zoom in on specific parts of the network for actor viz
mid_subset <- summary_actor_mids %>%
filter(actor %in% top_5)
head(mid_subset)
plot_actorStats(mid_subset, longitudinal = TRUE)
plot_actorStats(mid_subset_summary,
net_stat = "degree",
longitudinal = TRUE)
plot_actorStats(mid_subset,
net_stat = "degree",
longitudinal = TRUE)
plot_actorStats(mid_subset,
net_stat = "degree",
longitudinal = TRUE) +
facet_wrap(~actor)
# need to remove isolates
plot.netify(mid_long_network)
# need to remove isolates
plot.netify(mid_long_network)
# subset
mids_three_years <-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2010', '2013', '2014'))
plot(mids_three_years)
library(amen)
# convert to amen structure for modeling
mids_longit_prep <- prep_for_amen(mid_long_network)
