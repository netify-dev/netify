what_layer_to_peek=what_layers_to_subset ) }
!multilayer_logic
sub_net
when_to_subset
obj_attrs$netify_type!='cross_sec'
if( obj_attrs$netify_type!='cross_sec' ){
if( class(sub_net)=='list' & length(sub_net)==1 ){
# extract out of list
sub_net <- sub_net[[1]]
# adjust obj_attrs
obj_attrs <- obj_attrs[-1]
obj_attrs <- append(
obj_attrs,
attributes(sub_net),
after=0
)
}
}
multilayer_logic
if( multilayer_logic ){
# iterate peek through layers
sub_net <- lapply(
what_layers_to_subset,
function(x){
peek(
netlet,
what_to_peek=what_to_subset,
what_rows_to_peek=what_rows_to_subset,
what_cols_to_peek=what_cols_to_subset,
when_to_peek=when_to_subset,
what_layer_to_peek=x ) } )
# combine into multidimensional array
sub_net <- do.call(
'abind',
c(sub_net, along=3) )
}
is.null(when_to_subset) &
obj_attrs$netify_type!='cross_sec'
if( is.null(when_to_subset) &
obj_attrs$netify_type!='cross_sec' ){
when_to_subset <- msrmnts$time }
obj_attrs2 <- obj_attrs
is.list(sub_net)
if(is.list(sub_net)){
# pull attributes from a cross-sec in the list
crossSec_obj_attrs <- attributes(netlet[[1]])
sub_dims <- attributes(sub_net[[1]])
# adjust actor composition
crossSec_obj_attrs[1:2] <- sub_dims[1:2]
# apply change to each element in subsetted list
sub_net <- lapply(sub_net, function(x){
attributes(x) <- crossSec_obj_attrs ; return(x) })
# list level attributes
# adjust years
obj_attrs2$names <- names(sub_net)
}
!is.list(sub_net)
if(!is.list(sub_net)){
# adjust dimensions
obj_attrs2[1:2] <- attributes(sub_net)[1:2]
# adjust netify_type
if( length(dim(sub_net))==2 & !multilayer_logic ){
obj_attrs2$netify_type <- 'cross_sec' }
# related mod for multilayer net
if( length(dim(sub_net))==3 & multilayer_logic ){
obj_attrs2$netify_type <- 'cross_sec' }
}
if(class(sub_net)[1] == 'list'){
sub_actors <- unlist(lapply(sub_net, rownames)) }
if(class(sub_net)[1] != 'list'){
sub_actors <- rownames(sub_net) }
names(sub_actors) <- NULL
obj_attrs2$actor_pds <- obj_attrs$actor_pds[
obj_attrs$actor_pds$actor %in% sub_actors,]
if(obj_attrs2$netify_type != 'cross_sec'){
obj_attrs2$actor_pds$min_time <- apply(
obj_attrs2$actor_pds, 1, function(x){
max( x['min_time'], min(when_to_subset)) } )
obj_attrs2$actor_pds$max_time <- apply(
obj_attrs2$actor_pds, 1, function(x){
min( x['max_time'], max(when_to_subset)) } )
}
if(!is.null(obj_attrs$nodal_data)){
obj_attrs2$nodal_data <- obj_attrs$nodal_data[
obj_attrs$nodal_data$actor %in% sub_actors &
obj_attrs$nodal_data$time %in% when_to_subset,] }
if(!is.null(obj_attrs$dyad_data)){
# first subset time
obj_attrs2$dyad_data <- obj_attrs2$dyad_data[when_to_subset]
# then iterate through and subset actors
obj_attrs2$dyad_data <- lapply(
obj_attrs2$dyad_data, function(dd){
toKeep_rows <- intersect(rownames(dd), sub_actors)
toKeep_cols <- intersect(colnames(dd), sub_actors)
dd[toKeep_rows, toKeep_cols,] } ) }
attributes(sub_net) <- obj_attrs2
sub_net
tmp = get_raw(sub_net)
lapply(tmp, dim)
lapply(tmp, class)
ugh = attr(netlet, 'dyad_data')
lapply(ugh, dim)
when_to_subset
ugh2 = ugh[when_to_subset]
lapply(ugh2, dim)
lapply(ugh2, function(x){x[1:3,1:3]})
lapply(ugh2, function(x){x[1:3,1:3,]})
head(cow_dyads)
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist', 'cowmidongoing'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
plot.netify(mid_long_network)
test<-subset_netlet(mid_long_network, when_to_subset = c('2010', '2013', '2014'))
test
plot.netify(test)
test
netify_measurement
netify_measurements
netify_measurements(mid_long_network)
names(netify_measurements(mid_long_network))
netify_measurements(mid_long_network)$n_row_actors
test<-subset_netlet(mid_long_network,
what_to_subset = 999999,
when_to_subset = c('2010', '2013', '2014'))
test<-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2010', '2013', '2014'))
test
plot(test)
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(netify)
library(peacesciencer)
library(tidyverse)
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy()
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
peek(mid_long_network, when_to_peek = c('2012'), what_to_peek = 30)
test<-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2010', '2013', '2014'))
plot(test)
mid_long_network <- netify(
cow_dyads,
actor1='ccode1', actor2='ccode2', time='year',
weight='cowmidonset',
actor_time_uniform=FALSE,
sum_dyads=FALSE, symmetric=TRUE,
diag_to_NA=TRUE, missing_to_zero=FALSE,
nodal_vars = c('v2x_polyarchy1', 'v2x_polyarchy2'),
dyad_vars = c('capdist', 'cowmidongoing'),
dyad_vars_symmetric = c(TRUE, FALSE)
)
peek(mid_long_network, when_to_peek = c('2012'), what_to_peek = 30)
test<-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2010', '2013', '2014'))
plot(test)
?plot
?plot.netify
knitr::include_graphics('man/figures/hex.png')
getwd()
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
library(ggnewscale)
install.packages(ggnewscale)
install.packages('ggnewscale')
user = Sys.info()['user']
pth = paste0("/Users/dorffc/projectsGit/netify")
setwd(pth)
library(usethis)
library(roxygen2)
library(Rcpp)
library(devtools)
#document()
install()
#test()
#check()
# if error about corrupt file, s3 stuff, restart R
# usethis::use_git_config(user.name = "cassyld", user.email = "cassyld@gmail.com")
# devtools::install_github("netify-dev/netify")
# usethis::create_github_token()
# credentials::set_github_pat()
# remotes::install_github("netify-dev/netify")
# you accidentally installed intel version and not mac version of developer tools?
install_github("netify-dev/netify")
# load packages
library(netify)
library(peacesciencer)
library(tidyverse)
# create dyadic data set over time using peacesciencer
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy()
peek(mid_long_network, when_to_peek = c('2012'), what_to_peek = 30)
summary(mid_long_network)
summary_actor(mid_long_network)
summary(mid_long_network)
?summary_actor
summary_actor(mid_long_network$2014)
summary_actor(mid_long_network$2014)
summary_actor(mid_long_network$"2014")
plot_actorStats(mid_long_network
)
plot_actorStats(mid_long_network$"2014")
?plot_actorStats
plot_actorStats(mid_long_network,
longitudinal = TRUE)
summary(mid_long_network)
summary_actor(mid_long_network$"2014")
plot_actorStats(mid_long_network,
longitudinal = TRUE,
toplist_n = 30)
test<-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2010', '2013', '2014'))
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2012', '2013', '2014'))
mid_subset
plot_actorStats(mid_subset)
dim(mid_subset)
mid_subset
print(mid_subset)
peek(mid_subset)
plot_actorStats(mid_subset$2012)
plot_actorStats(mid_subset$'2012')
plot_actorStats(
summary(actor(mid_long_network,
longitudinal = TRUE,
toplist_n = 30)
)
)
plot_actorStats(
summary(summary_actor(mid_long_network,
longitudinal = TRUE,
toplist_n = 30))
)
summary(mid_long_network)
plot_actorStats(summary_actor(mid_long_network$"2014"))
summary_actor(mid_long_network$"2014")
plot(summary_actor(mid_long_network$1995))
t<-summary_actor(mid_long_network$"2014")
plot_actorStats(t,
longitudinal = TRUE,
toplist_n = 30)
summary(mid_long_network)
summary_actor(mid_long_network)
# every year every actor (messy!)
sum_actor_mids <- summary_actor(mid_long_network)
plot_actor_mids(sum_actor_mids)
plot_actorStats(sum_actor_mids)
?summary_actor
mid_long_network
attr(mid_long_network)
?attr
sum_actor_mids
head(sum_actor_mids)
actor_year_avg <- sum_actor_mids %>%
group_by(time) %>%
summarize(actor_year_avg = avg(average_degree_total))
actor_year_mean <- sum_actor_mids %>%
group_by(time) %>%
summarize(actor_year_mean = mean(average_degree_total))
actor_year_mean
sum_actor_mids
actor_year_mean <- sum_actor_mids %>%
group_by(time, actor) %>%
summarize(actor_year_mean = mean(average_degree_total))
actor_year_mean
plot_actorStats(actor_year_mean)
# entire object
summary(mid_long_network)
# every year & every actor (messy!)
summary_actor_mids <- summary_actor(mid_long_network)
summary_actor_mids
?plot_actorStats
class(summary_actor_mids)
plot_actorStats(summary_actor_mids)
# cannot pass this data frame to plot_actorStats
plot_actorStats(summary_actor_mids, longitudinal = TRUE)
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = latin_am)
# create a vector of numeric codes for Latin American countries
latin_am <- c(70, 80, 90, 91, 92, 93, 94, 95, 100, 101, 110, 115, 130, 135, 140, 145, 150, 155, 160, 165)
# convert numeric codes to character type
latin_am <- as.character(latin_am)
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = "latin_am")
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = latin_am)
# top 10 Latin American countries with the largest GDP
latin_am_top10 <- c(140, 70, 160, 100, 155, 135, 101, 130, 90, 192)
# Convert numeric codes to character type
latin_am_top10 <- as.character(latin_am_top10)
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = latin_am_top10)
# top 5 Latin American countries with the largest GDP
latin_am_top10 <- c(140, 70, 160, 100, 155)
# Convert numeric codes to character type
latin_am_top10 <- as.character(latin_am_top10)
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = latin_am_top10)
# top 3 Latin American countries with the largest GDP
latin_am_top10 <- c(140, 70, 160)
# Convert numeric codes to character type
latin_am_top10 <- as.character(latin_am_top10)
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = latin_am_top10)
# entire object
summary(mid_long_network)
class(summary(mid_long_network))
# every year & every actor (messy!)
summary_actor_mids <- summary_actor(mid_long_network)
head(summary_actors_mids)
head(summary_actor_mids)
# top 3 Latin American countries with the largest GDP
latin_am_top10 <- c("140", "70", "160")
plot_actorStats(summary_actor_mids,
longitudinal = TRUE,
actor_names = latin_am_top10)
?subset_netlet
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = latin_am_top10,
when_to_subset = c('2012', '2013', '2014'))
mid_subset
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = 20:190,
when_to_subset = c('2012', '2013', '2014'))
summary(mid_subset)
plot_actorStats(mid_subset$'2012')
?plot_actorStats
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = 20:190,
when_to_subset = c('2011', '2012', '2013', '2014'))
mid_subset_summary <- (actor_summary(mid_subset))
mid_subset_summary <- (summary_actor(mid_subset))
mid_subset_summary
plot_actorStats(summary_actor_mids,
longitudinal = TRUE)
# top 3 Latin American countries with the largest GDP
latin_am_top10 <- c("140", "70", "160")
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = latin_am_top10,
when_to_subset = c('2011', '2012', '2013', '2014'))
mid_subset_summary <- (summary_actor(mid_subset))
plot_actorStats(summary_actor_mids,
longitudinal = TRUE)
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = "latin_am_top10",
when_to_subset = c('2011', '2012', '2013', '2014'))
mid_subset
latin_am_top10
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = latin_am_top10,
when_to_subset = c('2011', '2012', '2013', '2014'))
mid_subset
# top 10 Latin American countries with the largest GDP
latin_am_top10 <- c(140, 70, 160, 100, 155, 135, 101, 130, 90, 192)
# convert numeric codes to character type
latin_am_top10 <- as.character(latin_am_top10)
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = latin_am_top10,
when_to_subset = c('2011', '2012', '2013', '2014'))
mid_subset_summary <- (summary_actor(mid_subset))
plot_actorStats(summary_actor_mids,
longitudinal = TRUE
)
plot_actorStats(mid_subset_summary,
longitudinal = TRUE)
summary_actor_mids
mid_subset
top_5 <-c("2", "710", "740", "750")
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = top_5,
when_to_subset = c('2011', '2012', '2013', '2014'))
mid_subset_summary <- (summary_actor(mid_subset))
mid_subset_summary
plot_actorStats(mid_subset_summary,
longitudinal = TRUE)
# top 5 GDP countries
top_5 <-c("2", "710", "740", "750")
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = top_5,
when_to_subset = c('2010', '2011', '2012', '2013', '2014'))
mid_subset_summary <- (summary_actor(mid_subset))
plot_actorStats(mid_subset_summary,
longitudinal = TRUE)
top_5 <-c("2", "710", "740", "750", "200")
# zoom in on specific parts of the network for actor viz
mid_subset <-subset_netlet(mid_long_network,
what_to_subset = top_5,
when_to_subset = c('2010', '2011', '2012', '2013', '2014'))
mid_subset_summary <- (summary_actor(mid_subset))
plot_actorStats(mid_subset_summary,
longitudinal = TRUE)
plot.netify(mid_long_network)
mids_three_years <-subset_netlet(mid_long_network,
what_to_subset = 190,
when_to_subset = c('2010', '2013', '2014'))
plot(mids_three_years)
?add_nodal
head(cow_dyads)
?peacesciencer
?create_dyadyears
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy()
# add gdp
add_sdp_gdp()
cow_dyads <- create_dyadyears(
subset_years = c(1995:2014)
) %>%
# add mids
add_cow_mids() %>%
# add capital distance
add_capital_distance() %>%
# add democracy
add_democracy() %>%
# add gdp
add_sdp_gdp()
names(cow_dyads)
head(cow_dyads)
node_data <- unique(cow_dyads$wbgdppc2011est2)
node_data
node_data <- unique(cow_dyads[,("ccode1", wbgdppc2011est2))
node_data <- unique(cow_dyads[,c("ccode1", wbgdppc2011est2))
node_data <- unique(cow_dyads[,c("ccode1", wbgdppc2011est2)])
node_data <- unique(cow_dyads[,c("ccode1", "wbgdppc2011est2")])
node_data
names(cow_dyads)
node_data <- unique(cow_dyads[,c("ccode1", "year", "wbgdppc2011est2")])
head(node_data)
mid_long_network <- add_nodal(
netlet = mid_long_network,
node_data = node_data
)
node_data <- unique(cow_dyads[,c("ccode1", "year", "wbgdppc2011est2")])
mid_long_network <- add_nodal(
netlet = mid_long_network,
node_data = node_data,
actor = "ccode1",
time = "year"
)
mid_long_network
# need to remove isolates
plot.netify(mid_long_network)
