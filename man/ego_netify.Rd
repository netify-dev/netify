% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ego_netify.R
\name{ego_netify}
\alias{ego_netify}
\title{Create ego networks from a netify object}
\usage{
ego_netify(
  netlet,
  ego,
  threshold = NULL,
  ngbd_direction = "any",
  include_ego = TRUE
)
}
\arguments{
\item{netlet}{A netify object (class "netify") from which to extract ego networks.}

\item{ego}{Character vector specifying the name(s) of the ego(s) for whom to
create ego networks. Must match actor names in the netify object.}

\item{threshold}{Numeric value or vector specifying the threshold for including
alters in the ego network based on edge weights. For longitudinal networks,
can be a vector with length equal to the number of time periods to apply
different thresholds over time. If NULL (default), uses 0 for unweighted
networks and the mean edge weight for weighted networks.}

\item{ngbd_direction}{Character string specifying which neighbors to include
for directed networks. Options are:
\itemize{
\item \code{"out"}: Include alters that ego has outgoing ties to
\item \code{"in"}: Include alters that ego has incoming ties from
\item \code{"any"}: Include alters with any tie to/from ego (default)
}}

\item{include_ego}{Logical. If TRUE (default), the ego node is included in
the ego network. If FALSE, only alters are included.}
}
\value{
Depending on the input and number of egos specified:
\itemize{
\item \strong{Single ego, cross-sectional}: A netify object representing
the ego network
\item \strong{Multiple egos, cross-sectional}: A list of netify objects,
one per ego
\item \strong{Longitudinal (any number of egos)}: A list of netify objects
with ego-time combinations as elements
}

Each returned netify object includes additional attributes:
\itemize{
\item \code{ego_netify}: TRUE (indicator that this is an ego network)
\item \code{ego_id}: Identifier of the ego (and time period if longitudinal)
\item \code{threshold}: Threshold value(s) used
\item \code{ngbd_direction}: Direction specification used
\item \code{include_ego}: Whether ego was included
}
}
\description{
\code{ego_netify} extracts ego networks from a
netify object. An ego network consists of a focal node (ego) and its immediate
neighbors (alters). For weighted networks, users can define neighborhoods using
edge weight thresholds. The function returns netify object(s) representing the
ego network(s).
}
\details{
The function extracts ego networks by identifying all nodes connected to the
specified ego(s) based on the given criteria:

\strong{Neighborhood definition:}
\itemize{
\item For unweighted networks: All nodes with edges to/from ego (threshold = 0)
\item For weighted networks: All nodes with edge weights exceeding the threshold
\item Direction matters only for directed networks (controlled by ngbd_direction)
}

\strong{Threshold behavior:}
\itemize{
\item If not specified, defaults to 0 for unweighted networks
\item If not specified for weighted networks, uses the mean edge weight
\item For longitudinal networks, can vary by time period if a vector is provided
\item Edges with weights > threshold are included (not â‰¥)
}

\strong{Output structure:}

The function preserves all attributes from the original netify object, including
nodal and dyadic variables, but subsets them to include only ego and its neighbors.
For longitudinal networks, ego networks may vary in composition across time periods
as relationships change.

\strong{Limitations:}
\itemize{
\item Currently does not support multilayer networks
\item Currently does not support bipartite networks
}
}
\author{
Cassy Dorff, Shahryar Minhas
}
