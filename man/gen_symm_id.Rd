% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agg_across_units.R
\name{gen_symm_id}
\alias{gen_symm_id}
\title{Generate Symmetric Identifiers for Dyadic Data}
\usage{
gen_symm_id(dyad_data, actor1, actor2, time = NULL)
}
\arguments{
\item{dyad_data}{A data.frame containing dyadic data with at least two columns
representing actors in each dyad.}

\item{actor1}{Character string specifying the name of the column containing
the first actor in each dyad.}

\item{actor2}{Character string specifying the name of the column containing
the second actor in each dyad.}

\item{time}{Optional character string specifying the name of the column
containing time information. If provided, the time value will be appended
to the symmetric ID to create unique identifiers for each time period.
Default is NULL.}
}
\value{
A character vector of symmetric identifiers with the same length as
the number of rows in \code{dyad_data}. Each ID is formatted as:
\itemize{
\item Without time: "actor1_actor2" (alphabetically sorted)
\item With time: "actor1_actor2_time" (actors alphabetically sorted)
}
}
\description{
This function creates symmetric identifiers for dyadic data, ensuring that
each unique pair of actors receives the same ID regardless of order. This is
particularly useful for undirected network data where the relationship between
actors A and B is the same as between B and A.
}
\details{
The function ensures symmetry by alphabetically sorting the actor names before
creating the ID. This means that the dyad "USA-China" will receive the same
ID as "China-USA". When a time column is specified, it's appended to maintain
unique identifiers across different time periods.

Performance note: This implementation uses vectorized operations for
significantly better performance on large datasets compared to row-wise operations.
}
\examples{
# Create example dyadic data
dyad_df <- data.frame(
  from = c("USA", "China", "Russia", "USA"),
  to = c("China", "USA", "USA", "Russia"),
  trade = c(100, 100, 50, 75),
  year = c(2020, 2020, 2021, 2021)
)

# Generate symmetric IDs without time
dyad_df$symm_id <- gen_symm_id(dyad_df, "from", "to")
# Results in: "China_USA", "China_USA", "Russia_USA", "Russia_USA"

# Generate symmetric IDs with time
dyad_df$symm_id_time <- gen_symm_id(dyad_df, "from", "to", "year")
# Results in: "China_USA_2020", "China_USA_2020", "Russia_USA_2021", "Russia_USA_2021"

}
\author{
Shahryar Minhas
}
