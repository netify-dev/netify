% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prep_for_amen.R
\name{prep_for_amen}
\alias{prep_for_amen}
\alias{netify_to_amen,}
\alias{to_amen,}
\alias{amen_ify}
\alias{netify_to_amen}
\alias{to_amen}
\title{Convert netify objects to amen package format}
\usage{
prep_for_amen(netlet)

netify_to_amen(netlet)

to_amen(netlet)

amen_ify(netlet)
}
\arguments{
\item{netlet}{A netify object containing network data. Currently supports
single-layer networks only. For multilayer networks, use
\code{\link{subset_netlet}} to extract individual layers first.}
}
\value{
A list with components formatted for amen analysis:
\item{Y}{The network adjacency matrix or array. For cross-sectional data,
this is a matrix. For longitudinal data, this is a 3-dimensional array
with dimensions: actors by actors by time.}
\item{Xdyad}{Array of dyadic covariates with dimensions: row by column by covariate
for cross-sectional data, or row by column by covariate by time for
longitudinal data. NULL if no dyadic variables exist.}
\item{Xrow}{Matrix or array of row actor (sender) covariates. For cross-sectional
data: row actors by covariates. For longitudinal: row actors by covariates by time.
NULL if no nodal variables exist.}
\item{Xcol}{Matrix or array of column actor (receiver) covariates. Same structure
as Xrow. For symmetric networks, Xcol will be identical to Xrow.}
}
\description{
\code{prep_for_amen} (also available as \code{netify_to_amen}, \code{to_amen})
transforms netify network objects into the specific data
structure required by the \code{amen} package for network analysis and modeling.
The amen package implements various network models including the Social
Relations Model (SRM) and Additive and Multiplicative Effects (AME) models.
}
\details{
The function handles three types of netify objects:
\itemize{
\item \strong{Cross-sectional networks}: Produces matrices for Y, Xrow, and Xcol,
and a 3D array for Xdyad
\item \strong{Longitudinal arrays}: Maintains array structure, adding time dimension
where needed
\item \strong{Longitudinal lists}: Converts list format to arrays suitable for amen
}

All nodal attributes must be numeric for compatibility with amen models. The
function will stop with an error if non-numeric nodal variables are detected.

Missing values in the network or covariates are preserved as NA, allowing
amen's modeling functions to handle them appropriately.
}
\examples{
# Load example data
data(icews)

# Cross-sectional example
icews_10 <- icews[icews$year == 2010,]

# Create netify object with nodal and dyadic attributes
icews_net <- netify(
  dyad_data = icews_10, 
  actor1 = 'i', actor2 = 'j', 
  symmetric = FALSE, weight = 'matlConf',
  nodal_vars = c('i_polity2', 'i_log_gdp', 'i_log_pop'),
  dyad_vars = c('matlCoop', 'verbCoop', 'verbConf'),
  dyad_vars_symmetric = c(FALSE, FALSE, FALSE)
)

# Convert to amen format
amen_data <- prep_for_amen(icews_net)

# Examine structure
str(amen_data)

# Y contains the network
dim(amen_data$Y)  # actors x actors

# Xdyad contains dyadic covariates
dim(amen_data$Xdyad)  # actors x actors x covariates

# Xrow and Xcol contain actor attributes
dim(amen_data$Xrow)  # actors x attributes

# Longitudinal example
icews_longit <- netify(
  dyad_data = icews,
  actor1 = 'i', actor2 = 'j', time = 'year',
  symmetric = FALSE, weight = 'matlConf',
  nodal_vars = c('i_polity2', 'i_log_gdp', 'i_log_pop'),
  dyad_vars = c('matlCoop', 'verbCoop', 'verbConf'),
  dyad_vars_symmetric = c(FALSE, FALSE, FALSE)
)

# Convert longitudinal data
amen_longit <- prep_for_amen(icews_longit)

# Now arrays have time dimension
dim(amen_longit$Y)      # actors x actors x time
dim(amen_longit$Xdyad)  # actors x actors x covariates x time

}
\author{
Ha Eun Choi, Cassy Dorff, Colin Henry, Shahryar Minhas
}
