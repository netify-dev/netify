% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary.netify.R
\name{summary.netify}
\alias{summary.netify}
\title{Calculate graph-level statistics for netify objects}
\usage{
\method{summary}{netify}(object, ...)
}
\arguments{
\item{object}{A netify object containing network data}

\item{...}{Additional arguments, including:
\describe{
\item{\code{other_stats}}{Named list of custom functions to calculate
additional graph-level statistics. Each function should accept a matrix
and return a named vector of scalar values.}
}}
}
\value{
A data frame with one row per network/time period containing:

\strong{Basic network properties:}
\describe{
\item{\code{net}}{Network/time identifier}
\item{\code{layer}}{Layer name (for multilayer networks)}
\item{\code{num_actors}}{Number of actors (or \code{num_row_actors} and
\code{num_col_actors} for bipartite networks)}
\item{\code{density}}{Proportion of possible ties that exist}
\item{\code{num_edges}}{Total number of edges (unweighted count)}
\item{\code{prop_edges_missing}}{Proportion of potential edges that are NA}
}

\strong{For weighted networks only:}
\describe{
\item{\code{mean_edge_weight}}{Average weight of existing edges}
\item{\code{sd_edge_weight}}{Standard deviation of edge weights}
\item{\code{median_edge_weight}}{Median edge weight}
\item{\code{min_edge_weight}, \code{max_edge_weight}}{Range of edge weights}
}

\strong{Structural measures:}
\describe{
\item{\code{competition} (or \code{competition_row}/\code{competition_col})}{
Herfindahl-Hirschman Index measuring concentration of ties. Calculated as
\eqn{\sum_{i=1}^{n} (s_i)^2} where \eqn{s_i} is actor i's share of total
ties. Ranges from 1/n (equal distribution) to 1 (one actor has all ties).}
\item{\code{sd_of_actor_means} (or \code{sd_of_row_means}/\code{sd_of_col_means})}{
Standard deviation of actors' average tie strengths, measuring heterogeneity
in actor activity levels}
\item{\code{transitivity}}{Global clustering coefficient (probability that
two neighbors of a node are connected)}
}

\strong{For directed networks only:}
\describe{
\item{\code{covar_of_row_col_means}}{Covariance between actors' sending and
receiving patterns}
\item{\code{reciprocity}}{Correlation between adjacency matrix and its
transpose, measuring tendency for mutual ties}
}
}
\description{
Computes comprehensive graph-level statistics for netify objects, including
density, reciprocity, centralization measures, and custom metrics. Handles
cross-sectional and longitudinal networks, as well as multilayer structures.
}
\details{
The function automatically adapts calculations based on network properties:
\itemize{
\item \strong{Bipartite networks}: Reports row and column actors separately
\item \strong{Directed networks}: Calculates separate statistics for in/out ties
\item \strong{Weighted networks}: Includes weight-based statistics
\item \strong{Multilayer networks}: Processes each layer independently
\item \strong{Longitudinal networks}: Calculates statistics for each time period
}

\strong{Competition Index Interpretation:}

The competition measure (HHI) captures how concentrated network ties are among
actors. Low values indicate distributed activity across many actors (competitive),
while high values indicate concentration among few actors (monopolistic). This
is particularly useful for analyzing power dynamics or resource distribution in
networks.

\strong{Custom Statistics:}

Add custom graph-level metrics using the \code{other_stats} parameter:

\preformatted{
# Example: Community detection
modularity_stat <- function(mat) {
  g <- netify_to_igraph(mat)
  comm <- igraph::cluster_walktrap(g)
  c(modularity = igraph::modularity(comm),
    n_communities = length(unique(comm$membership)))
}

summary(net, other_stats = list(community = modularity_stat))
}
}
\note{
For large longitudinal or multilayer networks, computation can be intensive.
Consider using \code{\link{subset_netify}} to analyze specific time periods
or layers.

Missing edges (NA values) are excluded from density calculations but tracked
in the \code{prop_edges_missing} statistic.
}
\examples{
# Load example data
data(icews)

# Basic usage
net <- netify(
  icews, 
  actor1 = 'i', actor2 = 'j', time = 'year',
  symmetric = FALSE, 
  weight = 'verbCoop'
)

# get summary
summary(net)

\dontrun{
# Add custom statistics - community detection
comm_stats <- function(mat) {
  g <- netify_to_igraph(mat)
  comm <- igraph::cluster_spinglass(g)
  c(n_communities = length(comm$csize),
    modularity = comm$modularity)
}

# Apply to subset for efficiency
sub_net <- subset_netify(net, time = as.character(2013:2014))
summary(sub_net, other_stats = list(community = comm_stats))
}

}
\references{
Dorff, C., Gallop, M., & Minhas, S. (2023). "Networks of violence: Predicting
conflict in Nigeria." \emph{Journal of Politics}, 85(1).
}
\author{
Cassy Dorff, Shahryar Minhas
}
