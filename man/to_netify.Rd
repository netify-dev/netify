% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_netify.R
\name{to_netify}
\alias{to_netify}
\title{Convert igraph, network, or matrix objects to netify format}
\usage{
to_netify(net_obj, weight = NULL, ...)
}
\arguments{
\item{net_obj}{An R object to convert: \code{igraph}, \code{network},
matrix, array, or a list of these objects.}

\item{weight}{Optional. Name of the weight attribute in \code{net_obj} to be used
as the main edge weight in the netify object. Default is \code{NULL}. Important to specify
for \code{igraph} and \code{network} objects as they do not have a default weight.}

\item{...}{Additional arguments passed to \code{new_netify}. Can include
\code{nodal_data} or \code{dyad_data} to override extracted attributes.}
}
\value{
A netify object with:
\itemize{
\item Adjacency matrix or list of matrices
\item Nodal attributes (if present in the input)
\item Dyadic attributes (if present in the input)
\item Weight specification (if provided)
}
}
\description{
Converts various network object types (igraph, network, matrices/arrays,
or lists of these) into netify objects (also available as \code{to_netify}).
Automatically extracts adjacency
matrices and any nodal/dyadic attributes from the input objects.
}
\details{
The function handles different input types:
\itemize{
\item \strong{igraph}: Extracts adjacency matrix, vertex attributes as nodal data,
and edge attributes as dyadic data
\item \strong{network}: Extracts adjacency matrix, vertex attributes as nodal data,
and edge attributes as dyadic data
\item \strong{matrix}: Direct conversion, no attribute extraction
\item \strong{array}: Assumes 3D arrays represent longitudinal networks
\item \strong{list}: Must contain all objects of the same type (all igraph,
all network, or all matrices)
}

For longitudinal data (lists or 3D arrays), the function creates a netify object
with time-indexed components. Actor ordering is preserved from the input objects
and made consistent across all components (adjacency, nodal, and dyadic data).
}
\note{
When converting from igraph or network objects, specify the \code{weight} parameter
to designate which edge attribute should be used as the primary edge weight in
the netify object.
}
\examples{
\dontrun{
# From igraph
library(igraph)
g <- sample_gnp(10, 0.3)
E(g)$weight <- runif(ecount(g))
V(g)$type <- sample(c("A", "B"), vcount(g), replace = TRUE)

net <- to_netify(g, weight = "weight")

# From network  
library(network)
n <- network(rgraph(10, tprob = 0.3))
set.vertex.attribute(n, "group", sample(1:2, 10, replace = TRUE))

net <- to_netify(n)

# From matrix
adj_mat <- matrix(rnorm(100), 10, 10)
net <- to_netify(adj_mat)

# From list of matrices (longitudinal)
mat_list <- list(
  "2001" = matrix(rnorm(100), 10, 10),
  "2002" = matrix(rnorm(100), 10, 10)
)
net <- to_netify(mat_list)
}

}
\author{
Cassy Dorff, Shahryar Minhas
}
